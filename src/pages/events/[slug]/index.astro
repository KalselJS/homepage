---
import { type CollectionEntry, getCollection } from "astro:content";
import Events from "@layouts/Events.astro";
import PostDetails from "@layouts/PostDetails.astro";
import getSortedEvents from "@utils/getSortedEvents";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

export interface Props {
  event: CollectionEntry<"event">;
}

export async function getStaticPaths() {
  const posts = await getCollection("event", ({ data }) => !data.draft);

  const postResult = posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));

  const pagePaths = getPageNumbers(posts.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { event } = Astro.props;

const events = await getCollection("event");

const sortedEvents = getSortedEvents(events);

const pagination = getPagination({
  events: sortedEvents,
  page: slug,
});
---

{event ? <PostDetails post={event} /> : <Events {...pagination} />}
